---

#--apiserver-advertise-address=<container ip>
#--pod-network-cidr=<sous reseau des pods> (flannel) 10.244.0.0/16 (weave) 10.32.0.0/16
#--apiserver-cert-extra-sans=<ne pas mettre>
- name: Init kube
  shell: |
    swapoff -a
    kubeadm config images pull
    kubeadm init --apiserver-advertise-address=10.0.4.100 --node-name $(hostname) --pod-network-cidr=10.244.0.0/16  --apiserver-cert-extra-sans=192.168.33.15 --ignore-preflight-errors=all
  args:
    creates: /etc/kubernetes/admin.conf

- name: "Init config for user"
  file:
    path: /root/.kube
    state: directory
    mode: "u=rwx,g=,o="

- name: "Ansible copy files remote to remote"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: "u=rw,g=,o="
    remote_src: yes

- name: Add master as worker
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-
  when: k8s_master_as_worker == True

- name: Flannel Installation
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
    touch $HOME/flannel.initialized
  args:
    creates: flannel.initialized

#- name: Install cloud.weave
#  shell: |
#    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
#    touch $HOME/weave.initialized
#  args:
#    creates: weave.initialized

- name: Register config
  shell : cat $HOME/.kube/config | sed -e 's/10.0.4.100:6443/192.168.33.15:6443/'
  register: kube_config

- name: "Init config for user"
  file:
    path: $HOME/.kube
    state: directory
    mode: "u=rwx,g=,o="
  delegate_to: "{{ item }}"
  become: false
  loop:
  - localhost
  - lxc-ubuntu

- name: "Copy config and config locally"
  copy:
    content: "{{ kube_config.stdout }}"
    dest: $HOME/.kube/config
  delegate_to: "{{ item }}"
  become: false
  loop:
  - localhost
  - lxc-ubuntu