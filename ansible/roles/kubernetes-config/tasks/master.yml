---

#--apiserver-advertise-address=<container ip>
#--pod-network-cidr=<sous reseau des pods> (flannel) 10.244.0.0/16 (weave) 10.32.0.2/16
#--apiserver-cert-extra-sans=<ne pas mettre>
- name: Init kube
  shell: |
    swapoff -a
    kubeadm config images pull
    kubeadm init --apiserver-advertise-address=10.0.4.100 --node-name $(hostname) --pod-network-cidr=10.32.0.2/16 --ignore-preflight-errors=all
  args:
    creates: /etc/kubernetes/admin.conf

- name: "Init config for user"
  file:
    path: /root/.kube
    state: directory
    mode: "u=rwx,g=,o="

- name: "Ansible copy files remote to remote"
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    owner: root
    group: root
    mode: "u=rw,g=,o="
    remote_src: yes

- name: Add master as worker
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-
  when: k8s_master_as_worker

#- name: Flannel Installation
#  shell: |
#    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
#    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml

- name: Install cloud.weave
  shell: |
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  args:
    creates: /root/weave.initialized

- name: Instal dashboard
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml
    kubectl -n kube-system patch service kubernetes-dashboard --type='json' -p '[{"op":"replace","path":"/spec/type","value":"NodePort"}]'
    kubectl -n kube-system patch service kubernetes-dashboard --type='json' -p '[{"op":"replace","path":"/spec/ports/0/nodePort","value":{{ k8s_dashboard_port }} }]'
  args:
    creates: /root/dashboard.initialized

- name: Create token for dashboard
  shell: |
    kubectl create serviceaccount cluster-admin-dashboard-sa
    kubectl create clusterrolebinding cluster-admin-dashboard-sa \
      --clusterrole=cluster-admin \
      --serviceaccount=default:cluster-admin-dashboard-sa

    TOKEN=$(kubectl describe secret $(kubectl -n kube-system get secret | awk '/^cluster-admin-dashboard-sa-token-/{print $1}') | awk '$1=="token:"{print $2}')
    touch $HOME/.kube/token
    echo $TOKEN > $HOME/.kube/token
